<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <cache:annotation-driven mode="aspectj"/>
    <context:load-time-weaver/>
    <aop:aspectj-autoproxy proxy-target-class="false"/>

    <context:component-scan base-package="com.springapp.mvc" use-default-filters="false">
        <context:include-filter type="aspectj" expression="com.springapp.mvc.controller.TweetController"/>
        <context:include-filter type="aspectj" expression="com.springapp.mvc.controller.ImageController"/>
    </context:component-scan>

    <context:component-scan base-package="com.springapp.mvc" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean name="cacheManager" class="com.google.code.ssm.spring.SSMCacheManager">
        <property name="caches">
            <set>
                <bean class="com.google.code.ssm.spring.SSMCache">
                    <constructor-arg name="cache" index="0" ref="defaultCache" />
                    <constructor-arg name="expiration" index="1" value="300" />
                    <constructor-arg name="allowClear" index="2" value="false" />
                </bean>
            </set>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean name="defaultCache" class="com.google.code.ssm.CacheFactory">
        <property name="cacheName" value="defaultCache" />
        <property name="cacheClientFactory">
            <bean name="cacheClientFactory" class="com.google.code.ssm.providers.spymemcached.MemcacheClientFactoryImpl" />
        </property>
        <property name="addressProvider">
            <bean class="com.google.code.ssm.config.DefaultAddressProvider">
                <property name="address" value="127.0.0.1:11211" />
            </bean>
        </property>
        <property name="configuration">
            <bean class="com.google.code.ssm.providers.CacheConfiguration">
                <property name="consistentHashing" value="true" />
            </bean>
        </property>
    </bean>

    <!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10000000"/>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/MiniTwitter/Website/home" />
            <mvc:mapping path="/MiniTwitter/API/account/profile_image" />
            <mvc:mapping path="/MiniTwitter/API/statuses/update" />
            <mvc:mapping path="/MiniTwitter/API/statuses/home" />
            <mvc:mapping path="/MiniTwitter/API/statuses/retweet" />
            <mvc:mapping path="/MiniTwitter/API/statuses/home_timeline" />
            <mvc:mapping path="/MiniTwitter/API/friendships/create" />
            <mvc:mapping path="/MiniTwitter/API/friendships/destroy" />
            <mvc:mapping path="/MiniTwitter/API/friendships/exists" />
            <mvc:mapping path="/MiniTwitter/API/friendships/recommendations" />
            <mvc:mapping path="/MiniTwitter/API/statuses/polling" />
            <mvc:mapping path="/MiniTwitter/Website/updateInfo" />
            <mvc:mapping path="/MiniTwitter/API/statuses/new_tweets" />
            <mvc:mapping path="/MiniTwitter/Website" />
            <bean class="com.springapp.mvc.interceptors.CheckAuthorizedInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/MiniTwitter/**/following" />
            <mvc:mapping path="/MiniTwitter/**/followers" />
            <mvc:mapping path="/MiniTwitter/Website/**" />
            <bean class="com.springapp.mvc.interceptors.CheckIfLoggedInInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
</beans>